{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Varan\\\\Desktop\\\\Code\\\\React-Native\\\\Projects\\\\chat-app\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { StatusBar } from \"expo-status-bar\";\nimport firebase from \"firebase\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAO79Yq5jjQWEsH5Oa-BEfBhvmMsyNZRoo\",\n  authDomain: \"chat-app-room-990d0.firebaseapp.com\",\n  projectId: \"chat-app-room-990d0\",\n  storageBucket: \"chat-app-room-990d0.appspot.com\",\n  messagingSenderId: \"347067636467\",\n  appId: \"1:347067636467:web:99d4118d6c25d7ca0ff586\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nYellowBox.ignoreWarnings([\"Setting a timer for a long period of time\"]);\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  useEffect(function () {\n    readUser();\n  }, []);\n\n  var readUser = function readUser() {\n    var user;\n    return _regeneratorRuntime.async(function readUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n          case 2:\n            user = _context.sent;\n\n            if (user) {\n              setUser(JSON.parse(user));\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!user) {\n    return React.createElement(View, {\n      style: styles.noUserContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, React.createElement(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Enter your name\",\n      value: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Chat App\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  noUserContainer: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textInput: {\n    height: 50,\n    width: \"100%\",\n    borderWidth: 1,\n    padding: 15,\n    borderColor: \"gray\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Varan/Desktop/Code/React-Native/Projects/chat-app/App.js"],"names":["React","useState","useEffect","AsyncStorage","StatusBar","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","YellowBox","ignoreWarnings","App","user","setUser","name","setName","readUser","getItem","JSON","parse","styles","noUserContainer","textInput","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","borderWidth","padding","borderColor"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;;;;;;AASA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,qCAFS;AAGrBC,EAAAA,SAAS,EAAE,qBAHU;AAIrBC,EAAAA,aAAa,EAAE,iCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;;AASA,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BT,EAAAA,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AACD;;AAEDU,SAAS,CAACC,cAAV,CAAyB,CAAC,2CAAD,CAAzB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwBjB,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOkB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBnB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOoB,IAAP;AAAA,MAAaC,OAAb;;AAEApB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIpB,YAAY,CAACqB,OAAb,CAAqB,MAArB,CADJ;;AAAA;AACTL,YAAAA,IADS;;AAEf,gBAAIA,IAAJ,EAAU;AACRC,cAAAA,OAAO,CAACK,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAD,CAAP;AACD;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAOA,MAAI,CAACA,IAAL,EAAW;AACT,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEQ,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,SADhB;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,KAAK,EAAER,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,eAAe,EAAE;AACfK,IAAAA,IAAI,EAAE,CADS;AAEfC,IAAAA,eAAe,EAAE,MAFF;AAGfC,IAAAA,UAAU,EAAE,QAHG;AAIfC,IAAAA,cAAc,EAAE;AAJD,GADc;AAO/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,WAAW,EAAE;AALJ;AAPoB,CAAlB,CAAf","sourcesContent":["// @refresh state\nimport React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  Button,\n  View,\n  YellowBox,\n} from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAO79Yq5jjQWEsH5Oa-BEfBhvmMsyNZRoo\",\n  authDomain: \"chat-app-room-990d0.firebaseapp.com\",\n  projectId: \"chat-app-room-990d0\",\n  storageBucket: \"chat-app-room-990d0.appspot.com\",\n  messagingSenderId: \"347067636467\",\n  appId: \"1:347067636467:web:99d4118d6c25d7ca0ff586\",\n};\n// Initialize Firebase\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nYellowBox.ignoreWarnings([\"Setting a timer for a long period of time\"]);\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    readUser();\n  }, []);\n\n  const readUser = async () => {\n    const user = await AsyncStorage.getItem(\"user\");\n    if (user) {\n      setUser(JSON.parse(user));\n    }\n  };\n\n  if (!user) {\n    return (\n      <View style={styles.noUserContainer}>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Enter your name\"\n          value={name}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>Chat App</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noUserContainer: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  textInput: {\n    height: 50,\n    width: \"100%\",\n    borderWidth: 1,\n    padding: 15,\n    borderColor: \"gray\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}